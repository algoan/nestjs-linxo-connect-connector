
name: Run Build and tests
on:
  - pull_request
  - push
env:
  NODE_ENV: test
jobs:
  test_workflow:
    runs-on: ubuntu-latest
    name: Run Build, Lint and Tests
    steps:
      # Checkout the repository
      - uses: actions/checkout@v2
      # Setup the node environment
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      # Cache dependencies
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      # Install dependencies
      - run: npm ci --prefer-offline
      # Build application
      - run: npm run build
      # Run lint
      - run: npm run lint
      # Run unit tests
      - run: npm run test
      # Run functional tests with coverage
      - run: npm run test:e2e:cov

  deploy:
    runs-on: ubuntu-latest
    name: Deploy the docker image to GCP
    needs: test_workflow
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
    steps:
      # Checkout the repository
      - uses: actions/checkout@v2
      # Set up google credentials
      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_SA_KEY }}
      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: gcloud auth configure-docker europe-docker.pkg.dev
      - run: npm install
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_REPO_GHA_PAT }}
